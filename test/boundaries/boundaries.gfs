# Title: Convergence of a potential flow solution
#
# Description:
#
# A test case initially presented by Almgren et al \cite{almgren97}.
# Three elliptical bodies are placed in the unit square. Constant
# unity inflow and outflow are specified on the left and right
# boundaries. Projection is then performed to obtain a potential flow
# solution around the bodies.
#
# Tables \ref{boundaries-x} and \ref{boundaries-y} illustrate the errors and convergence
# orders obtained for both components of the velocity when the
# resolution varies. Richardson extrapolation is used.  The errors are
# computed either on the whole domain (All cells) or on the cells
# whose parents at level 7 are entirely contained in the fluid (Full
# 128 cells).
#
# Close to second-order convergence is obtained in the bulk of the
# fluid, reducing to first-order close to the boundaries. The errors
# are small in all cases (with a maximum of 6\%) and comparable to
# that obtained by Almgren et al using a different discretisation.
#
# \input{convergence.tex}
#
# Author: St\'ephane Popinet
# Command: sh boundaries.sh boundaries.gfs
# Version: 0.6.4
# Required files: boundaries.sh orderU.ref orderfU.ref orderV.ref orderfV.ref
# Running time: 3 minutes
# Generated files: convergence.tex
#
1 0 GfsSimulation GfsBox GfsGEdge {} {
    Time { iend = 0 end = 1 }
    AdvectionParams { scheme = none }
    ApproxProjectionParams { tolerance = 1e-6 }
    Refine LEVEL
    Solid (ellipse (0.25, 0.25, 0.1, 0.1))
    Solid (ellipse (-0.25, 0.125, 0.15, 0.1))
    Solid (ellipse (0., -0.25, 0.2, 0.1))
    Init {} { U = 1 }
    OutputSimulation { start = end } sim-LEVEL {
        variables = U,V,P
    }
}
GfsBox {
    left = Boundary { BcDirichlet U 1 }
    right = Boundary { BcDirichlet U 1 }
}
