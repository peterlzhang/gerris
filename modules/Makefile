# Makefile.in generated by automake 1.11.3 from Makefile.am.
# modules/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/gerris
pkgincludedir = $(includedir)/gerris
pkglibdir = $(libdir)/gerris
pkglibexecdir = $(libexecdir)/gerris
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = rsurface2kdt$(EXEEXT)
subdir = modules
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(noinst_LTLIBRARIES) $(pkglib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libagmg2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libagmg2D_la_OBJECTS = libagmg2D_la-agmg.lo dagmg.lo
libagmg2D_la_OBJECTS = $(am_libagmg2D_la_OBJECTS)
#am_libagmg2D_la_rpath = -rpath $(pkglibdir)
libagmg3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libagmg3D_la_OBJECTS = libagmg3D_la-agmg.lo dagmg.lo
libagmg3D_la_OBJECTS = $(am_libagmg3D_la_OBJECTS)
#am_libagmg3D_la_rpath = -rpath $(pkglibdir)
am_libbubbles2D_la_OBJECTS = libbubbles2D_la-bubbles.lo
libbubbles2D_la_OBJECTS = $(am_libbubbles2D_la_OBJECTS)
libbubbles2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libbubbles2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libbubbles2D_la_rpath = -rpath $(pkglibdir)
am_libbubbles3D_la_OBJECTS = libbubbles3D_la-bubbles.lo
libbubbles3D_la_OBJECTS = $(am_libbubbles3D_la_OBJECTS)
libbubbles3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libbubbles3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libbubbles3D_la_rpath = -rpath $(pkglibdir)
am_libculvert2D_la_OBJECTS = libculvert2D_la-culvert.lo
libculvert2D_la_OBJECTS = $(am_libculvert2D_la_OBJECTS)
libculvert2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libculvert2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libdf33D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libdf33D_la_OBJECTS = libdf33D_la-df3.lo
libdf33D_la_OBJECTS = $(am_libdf33D_la_OBJECTS)
libdf33D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libdf33D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libelectrohydro2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libelectrohydro2D_la_OBJECTS =  \
	libelectrohydro2D_la-electrohydro.lo
libelectrohydro2D_la_OBJECTS = $(am_libelectrohydro2D_la_OBJECTS)
libelectrohydro2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libelectrohydro2D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libelectrohydro3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libelectrohydro3D_la_OBJECTS =  \
	libelectrohydro3D_la-electrohydro.lo
libelectrohydro3D_la_OBJECTS = $(am_libelectrohydro3D_la_OBJECTS)
libelectrohydro3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libelectrohydro3D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libfft2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libfft2D_la_OBJECTS = libfft2D_la-fft.lo
libfft2D_la_OBJECTS = $(am_libfft2D_la_OBJECTS)
libfft2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libfft2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_libfft2D_la_rpath = -rpath $(pkglibdir)
libfft3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libfft3D_la_OBJECTS = libfft3D_la-fft.lo
libfft3D_la_OBJECTS = $(am_libfft3D_la_OBJECTS)
libfft3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libfft3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_libfft3D_la_rpath = -rpath $(pkglibdir)
libhypre2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libhypre2D_la_OBJECTS = libhypre2D_la-hypre.lo
libhypre2D_la_OBJECTS = $(am_libhypre2D_la_OBJECTS)
libhypre2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libhypre2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libhypre2D_la_rpath = -rpath $(pkglibdir)
libhypre3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libhypre3D_la_OBJECTS = libhypre3D_la-hypre.lo
libhypre3D_la_OBJECTS = $(am_libhypre3D_la_OBJECTS)
libhypre3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libhypre3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libhypre3D_la_rpath = -rpath $(pkglibdir)
liblayered2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_liblayered2D_la_OBJECTS = liblayered2D_la-layered.lo
liblayered2D_la_OBJECTS = $(am_liblayered2D_la_OBJECTS)
liblayered2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(liblayered2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
liblis2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_liblis2D_la_OBJECTS = liblis2D_la-lis.lo
liblis2D_la_OBJECTS = $(am_liblis2D_la_OBJECTS)
liblis2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(liblis2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_liblis2D_la_rpath = -rpath $(pkglibdir)
liblis3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_liblis3D_la_OBJECTS = liblis3D_la-lis.lo
liblis3D_la_OBJECTS = $(am_liblis3D_la_OBJECTS)
liblis3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(liblis3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_liblis3D_la_rpath = -rpath $(pkglibdir)
libmap2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libmap2D_la_OBJECTS = libmap2D_la-map.lo
libmap2D_la_OBJECTS = $(am_libmap2D_la_OBJECTS)
libmap2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libmap2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libmap2D_la_rpath = -rpath $(pkglibdir)
libmap3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libmap3D_la_OBJECTS = map.lo
libmap3D_la_OBJECTS = $(am_libmap3D_la_OBJECTS)
#am_libmap3D_la_rpath = -rpath $(pkglibdir)
libode2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libode2D_la_OBJECTS = libode2D_la-ode.lo
libode2D_la_OBJECTS = $(am_libode2D_la_OBJECTS)
libode2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libode2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libode2D_la_rpath = -rpath $(pkglibdir)
libode3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libode3D_la_OBJECTS = libode3D_la-ode.lo
libode3D_la_OBJECTS = $(am_libode3D_la_OBJECTS)
libode3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libode3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libode3D_la_rpath = -rpath $(pkglibdir)
libokada2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libokada2D_la_OBJECTS = libokada2D_la-okada.lo
libokada2D_la_OBJECTS = $(am_libokada2D_la_OBJECTS)
libokada2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libokada2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libokada3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libokada3D_la_OBJECTS = libokada3D_la-okada.lo
libokada3D_la_OBJECTS = $(am_libokada3D_la_OBJECTS)
libokada3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libokada3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libparticulatecommon2D_la_LIBADD =
am_libparticulatecommon2D_la_OBJECTS =  \
	libparticulatecommon2D_la-particulatecommon.lo
libparticulatecommon2D_la_OBJECTS =  \
	$(am_libparticulatecommon2D_la_OBJECTS)
libparticulatecommon2D_la_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libparticulatecommon2D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libparticulatecommon3D_la_LIBADD =
am_libparticulatecommon3D_la_OBJECTS =  \
	libparticulatecommon3D_la-particulatecommon.lo
libparticulatecommon3D_la_OBJECTS =  \
	$(am_libparticulatecommon3D_la_OBJECTS)
libparticulatecommon3D_la_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libparticulatecommon3D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libparticulates2D_la_OBJECTS =  \
	libparticulates2D_la-particulates.lo
libparticulates2D_la_OBJECTS = $(am_libparticulates2D_la_OBJECTS)
libparticulates2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libparticulates2D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libparticulates3D_la_OBJECTS =  \
	libparticulates3D_la-particulates.lo
libparticulates3D_la_OBJECTS = $(am_libparticulates3D_la_OBJECTS)
libparticulates3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libparticulates3D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libskewsymmetric2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libskewsymmetric2D_la_OBJECTS =  \
	libskewsymmetric2D_la-skewsymmetric.lo
libskewsymmetric2D_la_OBJECTS = $(am_libskewsymmetric2D_la_OBJECTS)
libskewsymmetric2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libskewsymmetric2D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libskewsymmetric3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libskewsymmetric3D_la_OBJECTS =  \
	libskewsymmetric3D_la-skewsymmetric.lo
libskewsymmetric3D_la_OBJECTS = $(am_libskewsymmetric3D_la_OBJECTS)
libskewsymmetric3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libskewsymmetric3D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libstokes2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libstokes2D_la_OBJECTS = libstokes2D_la-stokes.lo CW263.lo
libstokes2D_la_OBJECTS = $(am_libstokes2D_la_OBJECTS)
am_libstokes2D_la_rpath = -rpath $(pkglibdir)
libstokes3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libstokes3D_la_OBJECTS = libstokes3D_la-stokes.lo CW263.lo
libstokes3D_la_OBJECTS = $(am_libstokes3D_la_OBJECTS)
am_libstokes3D_la_rpath = -rpath $(pkglibdir)
am_libterrain2D_la_OBJECTS = libterrain2D_la-terrain.lo
libterrain2D_la_OBJECTS = $(am_libterrain2D_la_OBJECTS)
libterrain2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libterrain2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_libterrain3D_la_OBJECTS = terrain.lo
libterrain3D_la_OBJECTS = $(am_libterrain3D_la_OBJECTS)
libtide2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libtide2D_la_OBJECTS = libtide2D_la-tide.lo
libtide2D_la_OBJECTS = $(am_libtide2D_la_OBJECTS)
libtide2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libtide2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libtide2D_la_rpath = -rpath $(pkglibdir)
libtide3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libtide3D_la_OBJECTS = libtide3D_la-tide.lo
libtide3D_la_OBJECTS = $(am_libtide3D_la_OBJECTS)
libtide3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libtide3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libtide3D_la_rpath = -rpath $(pkglibdir)
libtopics2D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libtopics2D_la_OBJECTS = libtopics2D_la-topics.lo
libtopics2D_la_OBJECTS = $(am_libtopics2D_la_OBJECTS)
libtopics2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libtopics2D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libtopics3D_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libtopics3D_la_OBJECTS = libtopics3D_la-topics.lo
libtopics3D_la_OBJECTS = $(am_libtopics3D_la_OBJECTS)
libtopics3D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libtopics3D_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_libwavewatch2D_la_OBJECTS = libwavewatch2D_la-wavewatch.lo
libwavewatch2D_la_OBJECTS = $(am_libwavewatch2D_la_OBJECTS)
libwavewatch2D_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libwavewatch2D_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_libwavewatch2D_la_rpath = -rpath $(pkglibdir)
PROGRAMS = $(bin_PROGRAMS)
am_rsurface2kdt_OBJECTS = rsurface2kdt-rsurface2kdt.$(OBJEXT) \
	rsurface2kdt-rsurface.$(OBJEXT)
rsurface2kdt_OBJECTS = $(am_rsurface2kdt_OBJECTS)
rsurface2kdt_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(rsurface2kdt_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libagmg2D_la_SOURCES) $(libagmg3D_la_SOURCES) \
	$(libbubbles2D_la_SOURCES) $(libbubbles3D_la_SOURCES) \
	$(libculvert2D_la_SOURCES) $(libdf33D_la_SOURCES) \
	$(libelectrohydro2D_la_SOURCES) \
	$(libelectrohydro3D_la_SOURCES) $(libfft2D_la_SOURCES) \
	$(libfft3D_la_SOURCES) $(libhypre2D_la_SOURCES) \
	$(libhypre3D_la_SOURCES) $(liblayered2D_la_SOURCES) \
	$(liblis2D_la_SOURCES) $(liblis3D_la_SOURCES) \
	$(libmap2D_la_SOURCES) $(libmap3D_la_SOURCES) \
	$(libode2D_la_SOURCES) $(libode3D_la_SOURCES) \
	$(libokada2D_la_SOURCES) $(libokada3D_la_SOURCES) \
	$(libparticulatecommon2D_la_SOURCES) \
	$(libparticulatecommon3D_la_SOURCES) \
	$(libparticulates2D_la_SOURCES) \
	$(libparticulates3D_la_SOURCES) \
	$(libskewsymmetric2D_la_SOURCES) \
	$(libskewsymmetric3D_la_SOURCES) $(libstokes2D_la_SOURCES) \
	$(libstokes3D_la_SOURCES) $(libterrain2D_la_SOURCES) \
	$(libterrain3D_la_SOURCES) $(libtide2D_la_SOURCES) \
	$(libtide3D_la_SOURCES) $(libtopics2D_la_SOURCES) \
	$(libtopics3D_la_SOURCES) $(libwavewatch2D_la_SOURCES) \
	$(rsurface2kdt_SOURCES)
DIST_SOURCES = $(libagmg2D_la_SOURCES) $(libagmg3D_la_SOURCES) \
	$(libbubbles2D_la_SOURCES) $(libbubbles3D_la_SOURCES) \
	$(libculvert2D_la_SOURCES) $(libdf33D_la_SOURCES) \
	$(libelectrohydro2D_la_SOURCES) \
	$(libelectrohydro3D_la_SOURCES) $(libfft2D_la_SOURCES) \
	$(libfft3D_la_SOURCES) $(libhypre2D_la_SOURCES) \
	$(libhypre3D_la_SOURCES) $(liblayered2D_la_SOURCES) \
	$(liblis2D_la_SOURCES) $(liblis3D_la_SOURCES) \
	$(libmap2D_la_SOURCES) $(libmap3D_la_SOURCES) \
	$(libode2D_la_SOURCES) $(libode3D_la_SOURCES) \
	$(libokada2D_la_SOURCES) $(libokada3D_la_SOURCES) \
	$(libparticulatecommon2D_la_SOURCES) \
	$(libparticulatecommon3D_la_SOURCES) \
	$(libparticulates2D_la_SOURCES) \
	$(libparticulates3D_la_SOURCES) \
	$(libskewsymmetric2D_la_SOURCES) \
	$(libskewsymmetric3D_la_SOURCES) $(libstokes2D_la_SOURCES) \
	$(libstokes3D_la_SOURCES) $(libterrain2D_la_SOURCES) \
	$(libterrain3D_la_SOURCES) $(libtide2D_la_SOURCES) \
	$(libtide3D_la_SOURCES) $(libtopics2D_la_SOURCES) \
	$(libtopics3D_la_SOURCES) $(libwavewatch2D_la_SOURCES) \
	$(rsurface2kdt_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /local/peterzhang/gerris-stable/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AS = as
AUTOCONF = ${SHELL} /local/peterzhang/gerris-stable/missing --run autoconf
AUTOHEADER = ${SHELL} /local/peterzhang/gerris-stable/missing --run autoheader
AUTOMAKE = ${SHELL} /local/peterzhang/gerris-stable/missing --run automake-1.11
AWK = gawk
CC = mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -D_XOPEN_SOURCE=700 -D_BSD_SOURCE -D_GNU_SOURCE -Wall -Werror-implicit-function-declaration -Wmissing-prototypes -Wmissing-declarations -pipe -std=c99
CPP = mpicc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FC = 
FCFLAGS = 
FFLAGS = -g -O2
FFTW3_CFLAGS = -I/usr/local/include  
FFTW3_LIBS = -L/usr/local/lib -lfftw3 -lm  
FGREP = /bin/grep -F
FLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/4.6 -L/usr/lib/gcc/x86_64-linux-gnu/4.6/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.6/../../.. -lgfortran -lm -lquadmath
GFS2D_LIBS = $(top_builddir)/src/libgfs2D.la -pthread -Wl,--export-dynamic -L/usr/local/lib -lgts -lm -lgthread-2.0 -lgmodule-2.0 -lrt -lglib-2.0  
GFS3D_LIBS = $(top_builddir)/src/libgfs3D.la -pthread -Wl,--export-dynamic -L/usr/local/lib -lgts -lm -lgthread-2.0 -lgmodule-2.0 -lrt -lglib-2.0  
GFS_COMPILATION_FLAGS = 
GFS_MAJOR_VERSION = 1
GFS_MICRO_VERSION = 2
GFS_MINOR_VERSION = 3
GFS_VERSION = 1.3.2
GREP = /bin/grep
GSL_CFLAGS = 
GSL_CONFIG = no
GSL_LIBS = 
GTS_CFLAGS = -pthread -I/usr/local/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GTS_LIBS = -pthread -Wl,--export-dynamic -L/usr/local/lib -lgts -lm -lgthread-2.0 -lgmodule-2.0 -lrt -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_CURRENT = 2
LT_RELEASE = 1.3
LT_REVISION = 0
MAINT = 
MAKEINFO = ${SHELL} /local/peterzhang/gerris-stable/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NO_UNDEFINED = -no-undefined
OBJDUMP = objdump
OBJEXT = o
ODE_CFLAGS = 
ODE_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gerris
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.3.2
W3INIT = 
WEBROOT = /var/www/site-gerris/gerris
abs_builddir = /local/peterzhang/gerris-stable/modules
abs_srcdir = /local/peterzhang/gerris-stable/modules
abs_top_builddir = /local/peterzhang/gerris-stable
abs_top_srcdir = /local/peterzhang/gerris-stable
ac_ct_AR = ar
ac_ct_CC = mpicc
ac_ct_DUMPBIN = 
ac_ct_F77 = gfortran
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_m4 = yes
have_pkg_config = yes
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /local/peterzhang/gerris-stable/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ode = no
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
use_mpicc = yes
SUBDIRS = RStarTree kdt fes2004 wavewatch culvert
AM_CPPFLAGS = -DGFS_MODULES_DIR=\"$(libdir)/gerris\"
INCLUDES = -I$(top_srcdir)/src -I$(includedir) \
           -DG_LOG_DOMAIN=\"Gfs-modules\" $(GTS_CFLAGS)

#MAP = libmap2D.la libmap3D.la
#TIDE = libtide2D.la libtide3D.la
STOKES = libstokes2D.la libstokes3D.la
#WAVEWATCH = libwavewatch2D.la
#HYPRE = libhypre2D.la libhypre3D.la
#LIS = liblis2D.la liblis3D.la
#AGMG = libagmg2D.la libagmg3D.la
#ODE = libode2D.la libode3D.la
#BUBBLES = libbubbles2D.la libbubbles3D.la
FFT = libfft2D.la libfft3D.la
pkglib_LTLIBRARIES = \
	$(MAP) \
	libterrain2D.la \
	libterrain3D.la \
	libparticulates2D.la \
	libparticulates3D.la \
	libokada2D.la \
	libokada3D.la \
	libdf33D.la \
	libelectrohydro2D.la \
	libelectrohydro3D.la \
	libskewsymmetric2D.la \
	libskewsymmetric3D.la \
	libtopics2D.la \
	libtopics3D.la \
	libculvert2D.la \
	liblayered2D.la \
	$(TIDE) \
	$(STOKES) \
	$(WAVEWATCH) \
	$(HYPRE) \
	$(LIS) \
	$(AGMG) \
	$(ODE) \
        $(BUBBLES) \
	$(FFT)

AM_LDFLAGS = $(NO_UNDEFINED)\
        -version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)\
	-release $(LT_RELEASE) -export-dynamic -module

libmap3D_la_SOURCES = map.c
libmap3D_la_LIBADD = $(GFS3D_LIBS) -lproj
libmap2D_la_SOURCES = map.c
libmap2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libmap2D_la_LIBADD = $(GFS2D_LIBS) -lproj
KDTLIBS = -Lkdt -lkdt -lm
KDTDEPS = kdt/libkdt.la
libterrain3D_la_SOURCES = terrain.c
libterrain3D_la_LIBADD = $(GFS3D_LIBS) $(KDTLIBS)
libterrain3D_la_DEPENDENCIES = $(KDTDEPS)
libterrain2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libterrain2D_la_SOURCES = terrain.c
libterrain2D_la_LIBADD = $(GFS2D_LIBS) $(KDTLIBS)
libterrain2D_la_DEPENDENCIES = $(KDTDEPS)
libtide3D_la_SOURCES = tide.c
libtide3D_la_CFLAGS = $(AM_CFLAGS) $(GSL_CFLAGS)
libtide3D_la_LIBADD = $(GFS3D_LIBS) -Lfes2004 -lfes -lnetcdf $(GSL_LIBS)
libtide2D_la_SOURCES = tide.c
libtide2D_la_CFLAGS = $(AM_CFLAGS) $(GSL_CFLAGS) -DFTT_2D=1
libtide2D_la_LIBADD = $(GFS2D_LIBS) -Lfes2004 -lfes -lnetcdf $(GSL_LIBS)
libstokes3D_la_SOURCES = stokes.c CW263.f
libstokes3D_la_CFLAGS = $(AM_CFLAGS)
libstokes3D_la_LIBADD = $(GFS3D_LIBS)
libstokes2D_la_SOURCES = stokes.c CW263.f
libstokes2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libstokes2D_la_LIBADD = $(GFS2D_LIBS)
libwavewatch2D_la_SOURCES = wavewatch.c
libwavewatch2D_la_LIBADD = $(GFS2D_LIBS) -Lwavewatch -lwavewatch -L/usr/lib/gcc/i486-linux-gnu/4.2 -lgfortran
libwavewatch2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1 \
  -DW3SRCE=`nm wavewatch/libwavewatch.a | grep w3srce | awk '{ if ($$2 == "T") print $$3; }'` \
  -DGFSW3INIT=`nm wavewatch/libwavewatch.a | grep gfsw3_init | awk '{ if ($$2 == "T") print $$3; }'`

libwavewatch2D_la_DEPENDENCIES = wavewatch/libwavewatch.a
libode3D_la_SOURCES = ode.c
libode3D_la_CFLAGS = $(AM_CFLAGS) $(ODE_CFLAGS)
libode3D_la_LIBADD = $(GFS3D_LIBS) $(ODE_LIBS)
libode2D_la_SOURCES = ode.c
libode2D_la_CFLAGS = $(AM_CFLAGS) $(ODE_CFLAGS) -DFTT_2D=1
libode2D_la_LIBADD = $(GFS2D_LIBS) $(ODE_LIBS)
rsurface2kdt_SOURCES = rsurface2kdt.c rsurface.c rsurface.h
rsurface2kdt_LDADD = -LRStarTree -lcSmRST $(KDTLIBS)
rsurface2kdt_CFLAGS = $(AM_CFLAGS)
rsurface2kdt_DEPENDENCIES = $(KDTDEPS)
noinst_LTLIBRARIES = libparticulatecommon2D.la libparticulatecommon3D.la
libparticulatecommon3D_la_SOURCES = particulatecommon.c particulatecommon.h
libparticulatecommon3D_la_CFLAGS = $(AM_CFLAGS)
libparticulatecommon2D_la_SOURCES = particulatecommon.c particulatecommon.h
libparticulatecommon2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libparticulates3D_la_SOURCES = particulates.c
libparticulates3D_la_CFLAGS = $(AM_CFLAGS)
libparticulates3D_la_LIBADD = libparticulatecommon3D.la $(GFS3D_LIBS)
libparticulates3D_la_DEPENDENCIES = libparticulatecommon3D.la
libparticulates2D_la_SOURCES = particulates.c
libparticulates2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libparticulates2D_la_LIBADD = libparticulatecommon2D.la $(GFS2D_LIBS)
libparticulates2D_la_DEPENDENCIES = libparticulatecommon2D.la
libbubbles3D_la_SOURCES = bubbles.c
libbubbles3D_la_CFLAGS = $(AM_CFLAGS) $(GSL_CFLAGS)
libbubbles3D_la_LIBADD = libparticulatecommon3D.la $(GFS3D_LIBS) $(GSL_LIBS)
libbubbles3D_la_DEPENDENCIES = libparticulatecommon3D.la
libbubbles2D_la_SOURCES = bubbles.c
libbubbles2D_la_CFLAGS = $(AM_CFLAGS) $(GSL_CFLAGS) -DFTT_2D=1
libbubbles2D_la_LIBADD = libparticulatecommon2D.la $(GFS2D_LIBS) $(GSL_LIBS)
libbubbles2D_la_DEPENDENCIES = libparticulatecommon2D.la
libfft3D_la_SOURCES = fft.c
libfft3D_la_CFLAGS = $(AM_CFLAGS) $(FFTW3_CFLAGS)
libfft3D_la_LIBADD = $(GFS3D_LIBS) $(FFTW3_LIBS)
libfft2D_la_SOURCES = fft.c
libfft2D_la_CFLAGS = $(AM_CFLAGS) $(FFTW3_CFLAGS) -DFTT_2D=1
libfft2D_la_LIBADD = $(GFS2D_LIBS) $(FFTW3_LIBS)
libhypre3D_la_SOURCES = hypre.c
libhypre3D_la_CFLAGS = $(AM_CFLAGS)
libhypre3D_la_LIBADD = $(GFS3D_LIBS) -lHYPRE -lm
libhypre2D_la_SOURCES = hypre.c
libhypre2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libhypre2D_la_LIBADD = $(GFS2D_LIBS) -lHYPRE -lm
liblis3D_la_SOURCES = lis.c
liblis3D_la_CFLAGS = $(AM_CFLAGS)
liblis3D_la_LIBADD = $(GFS3D_LIBS) -llis -lgfortran -lm
liblis2D_la_SOURCES = lis.c
liblis2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
liblis2D_la_LIBADD = $(GFS2D_LIBS) -llis -lgfortran -lm
libagmg3D_la_SOURCES = agmg.c dagmg.f90
libagmg3D_la_CFLAGS = $(AM_CFLAGS)
libagmg3D_la_LIBADD = $(GFS3D_LIBS) -llapack -lblas -lgfortran -lm
libagmg2D_la_SOURCES = agmg.c dagmg.f90
libagmg2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libagmg2D_la_LIBADD = $(GFS2D_LIBS) -llapack -lblas -lgfortran -lm
libokada3D_la_SOURCES = okada.c
libokada3D_la_CFLAGS = $(AM_CFLAGS)
libokada3D_la_LIBADD = $(GFS3D_LIBS)
libokada2D_la_SOURCES = okada.c
libokada2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libokada2D_la_LIBADD = $(GFS2D_LIBS)
libdf33D_la_SOURCES = df3.c
libdf33D_la_CFLAGS = $(AM_CFLAGS)
libdf33D_la_LIBADD = $(GFS3D_LIBS)
libelectrohydro3D_la_SOURCES = electrohydro.c
libelectrohydro3D_la_CFLAGS = $(AM_CFLAGS)
libelectrohydro3D_la_LIBADD = $(GFS3D_LIBS)
libelectrohydro2D_la_SOURCES = electrohydro.c
libelectrohydro2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libelectrohydro2D_la_LIBADD = $(GFS2D_LIBS)
libskewsymmetric3D_la_SOURCES = skewsymmetric.c
libskewsymmetric3D_la_CFLAGS = $(AM_CFLAGS)
libskewsymmetric3D_la_LIBADD = $(GFS3D_LIBS)
libskewsymmetric2D_la_SOURCES = skewsymmetric.c
libskewsymmetric2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libskewsymmetric2D_la_LIBADD = $(GFS2D_LIBS)
libtopics3D_la_SOURCES = topics.c
libtopics3D_la_CFLAGS = $(AM_CFLAGS)
libtopics3D_la_LIBADD = $(GFS3D_LIBS)
libtopics2D_la_SOURCES = topics.c
libtopics2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
libtopics2D_la_LIBADD = $(GFS2D_LIBS)
libculvert2D_la_SOURCES = culvert.c
libculvert2D_la_CFLAGS = $(AM_CFLAGS)
libculvert2D_la_LIBADD = $(GFS2D_LIBS) -Lculvert -lboyd87 -lm
libculvert2D_la_DEPENDENCIES = culvert/libboyd87.la
liblayered2D_la_SOURCES = layered.c
liblayered2D_la_CFLAGS = $(AM_CFLAGS) -DFTT_2D=1
liblayered2D_la_LIBADD = $(GFS2D_LIBS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .f .f90 .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu modules/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu modules/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libagmg2D.la: $(libagmg2D_la_OBJECTS) $(libagmg2D_la_DEPENDENCIES) $(EXTRA_libagmg2D_la_DEPENDENCIES) 
	$(FCLINK) $(am_libagmg2D_la_rpath) $(libagmg2D_la_OBJECTS) $(libagmg2D_la_LIBADD) $(LIBS)
libagmg3D.la: $(libagmg3D_la_OBJECTS) $(libagmg3D_la_DEPENDENCIES) $(EXTRA_libagmg3D_la_DEPENDENCIES) 
	$(FCLINK) $(am_libagmg3D_la_rpath) $(libagmg3D_la_OBJECTS) $(libagmg3D_la_LIBADD) $(LIBS)
libbubbles2D.la: $(libbubbles2D_la_OBJECTS) $(libbubbles2D_la_DEPENDENCIES) $(EXTRA_libbubbles2D_la_DEPENDENCIES) 
	$(libbubbles2D_la_LINK) $(am_libbubbles2D_la_rpath) $(libbubbles2D_la_OBJECTS) $(libbubbles2D_la_LIBADD) $(LIBS)
libbubbles3D.la: $(libbubbles3D_la_OBJECTS) $(libbubbles3D_la_DEPENDENCIES) $(EXTRA_libbubbles3D_la_DEPENDENCIES) 
	$(libbubbles3D_la_LINK) $(am_libbubbles3D_la_rpath) $(libbubbles3D_la_OBJECTS) $(libbubbles3D_la_LIBADD) $(LIBS)
libculvert2D.la: $(libculvert2D_la_OBJECTS) $(libculvert2D_la_DEPENDENCIES) $(EXTRA_libculvert2D_la_DEPENDENCIES) 
	$(libculvert2D_la_LINK) -rpath $(pkglibdir) $(libculvert2D_la_OBJECTS) $(libculvert2D_la_LIBADD) $(LIBS)
libdf33D.la: $(libdf33D_la_OBJECTS) $(libdf33D_la_DEPENDENCIES) $(EXTRA_libdf33D_la_DEPENDENCIES) 
	$(libdf33D_la_LINK) -rpath $(pkglibdir) $(libdf33D_la_OBJECTS) $(libdf33D_la_LIBADD) $(LIBS)
libelectrohydro2D.la: $(libelectrohydro2D_la_OBJECTS) $(libelectrohydro2D_la_DEPENDENCIES) $(EXTRA_libelectrohydro2D_la_DEPENDENCIES) 
	$(libelectrohydro2D_la_LINK) -rpath $(pkglibdir) $(libelectrohydro2D_la_OBJECTS) $(libelectrohydro2D_la_LIBADD) $(LIBS)
libelectrohydro3D.la: $(libelectrohydro3D_la_OBJECTS) $(libelectrohydro3D_la_DEPENDENCIES) $(EXTRA_libelectrohydro3D_la_DEPENDENCIES) 
	$(libelectrohydro3D_la_LINK) -rpath $(pkglibdir) $(libelectrohydro3D_la_OBJECTS) $(libelectrohydro3D_la_LIBADD) $(LIBS)
libfft2D.la: $(libfft2D_la_OBJECTS) $(libfft2D_la_DEPENDENCIES) $(EXTRA_libfft2D_la_DEPENDENCIES) 
	$(libfft2D_la_LINK) $(am_libfft2D_la_rpath) $(libfft2D_la_OBJECTS) $(libfft2D_la_LIBADD) $(LIBS)
libfft3D.la: $(libfft3D_la_OBJECTS) $(libfft3D_la_DEPENDENCIES) $(EXTRA_libfft3D_la_DEPENDENCIES) 
	$(libfft3D_la_LINK) $(am_libfft3D_la_rpath) $(libfft3D_la_OBJECTS) $(libfft3D_la_LIBADD) $(LIBS)
libhypre2D.la: $(libhypre2D_la_OBJECTS) $(libhypre2D_la_DEPENDENCIES) $(EXTRA_libhypre2D_la_DEPENDENCIES) 
	$(libhypre2D_la_LINK) $(am_libhypre2D_la_rpath) $(libhypre2D_la_OBJECTS) $(libhypre2D_la_LIBADD) $(LIBS)
libhypre3D.la: $(libhypre3D_la_OBJECTS) $(libhypre3D_la_DEPENDENCIES) $(EXTRA_libhypre3D_la_DEPENDENCIES) 
	$(libhypre3D_la_LINK) $(am_libhypre3D_la_rpath) $(libhypre3D_la_OBJECTS) $(libhypre3D_la_LIBADD) $(LIBS)
liblayered2D.la: $(liblayered2D_la_OBJECTS) $(liblayered2D_la_DEPENDENCIES) $(EXTRA_liblayered2D_la_DEPENDENCIES) 
	$(liblayered2D_la_LINK) -rpath $(pkglibdir) $(liblayered2D_la_OBJECTS) $(liblayered2D_la_LIBADD) $(LIBS)
liblis2D.la: $(liblis2D_la_OBJECTS) $(liblis2D_la_DEPENDENCIES) $(EXTRA_liblis2D_la_DEPENDENCIES) 
	$(liblis2D_la_LINK) $(am_liblis2D_la_rpath) $(liblis2D_la_OBJECTS) $(liblis2D_la_LIBADD) $(LIBS)
liblis3D.la: $(liblis3D_la_OBJECTS) $(liblis3D_la_DEPENDENCIES) $(EXTRA_liblis3D_la_DEPENDENCIES) 
	$(liblis3D_la_LINK) $(am_liblis3D_la_rpath) $(liblis3D_la_OBJECTS) $(liblis3D_la_LIBADD) $(LIBS)
libmap2D.la: $(libmap2D_la_OBJECTS) $(libmap2D_la_DEPENDENCIES) $(EXTRA_libmap2D_la_DEPENDENCIES) 
	$(libmap2D_la_LINK) $(am_libmap2D_la_rpath) $(libmap2D_la_OBJECTS) $(libmap2D_la_LIBADD) $(LIBS)
libmap3D.la: $(libmap3D_la_OBJECTS) $(libmap3D_la_DEPENDENCIES) $(EXTRA_libmap3D_la_DEPENDENCIES) 
	$(LINK) $(am_libmap3D_la_rpath) $(libmap3D_la_OBJECTS) $(libmap3D_la_LIBADD) $(LIBS)
libode2D.la: $(libode2D_la_OBJECTS) $(libode2D_la_DEPENDENCIES) $(EXTRA_libode2D_la_DEPENDENCIES) 
	$(libode2D_la_LINK) $(am_libode2D_la_rpath) $(libode2D_la_OBJECTS) $(libode2D_la_LIBADD) $(LIBS)
libode3D.la: $(libode3D_la_OBJECTS) $(libode3D_la_DEPENDENCIES) $(EXTRA_libode3D_la_DEPENDENCIES) 
	$(libode3D_la_LINK) $(am_libode3D_la_rpath) $(libode3D_la_OBJECTS) $(libode3D_la_LIBADD) $(LIBS)
libokada2D.la: $(libokada2D_la_OBJECTS) $(libokada2D_la_DEPENDENCIES) $(EXTRA_libokada2D_la_DEPENDENCIES) 
	$(libokada2D_la_LINK) -rpath $(pkglibdir) $(libokada2D_la_OBJECTS) $(libokada2D_la_LIBADD) $(LIBS)
libokada3D.la: $(libokada3D_la_OBJECTS) $(libokada3D_la_DEPENDENCIES) $(EXTRA_libokada3D_la_DEPENDENCIES) 
	$(libokada3D_la_LINK) -rpath $(pkglibdir) $(libokada3D_la_OBJECTS) $(libokada3D_la_LIBADD) $(LIBS)
libparticulatecommon2D.la: $(libparticulatecommon2D_la_OBJECTS) $(libparticulatecommon2D_la_DEPENDENCIES) $(EXTRA_libparticulatecommon2D_la_DEPENDENCIES) 
	$(libparticulatecommon2D_la_LINK)  $(libparticulatecommon2D_la_OBJECTS) $(libparticulatecommon2D_la_LIBADD) $(LIBS)
libparticulatecommon3D.la: $(libparticulatecommon3D_la_OBJECTS) $(libparticulatecommon3D_la_DEPENDENCIES) $(EXTRA_libparticulatecommon3D_la_DEPENDENCIES) 
	$(libparticulatecommon3D_la_LINK)  $(libparticulatecommon3D_la_OBJECTS) $(libparticulatecommon3D_la_LIBADD) $(LIBS)
libparticulates2D.la: $(libparticulates2D_la_OBJECTS) $(libparticulates2D_la_DEPENDENCIES) $(EXTRA_libparticulates2D_la_DEPENDENCIES) 
	$(libparticulates2D_la_LINK) -rpath $(pkglibdir) $(libparticulates2D_la_OBJECTS) $(libparticulates2D_la_LIBADD) $(LIBS)
libparticulates3D.la: $(libparticulates3D_la_OBJECTS) $(libparticulates3D_la_DEPENDENCIES) $(EXTRA_libparticulates3D_la_DEPENDENCIES) 
	$(libparticulates3D_la_LINK) -rpath $(pkglibdir) $(libparticulates3D_la_OBJECTS) $(libparticulates3D_la_LIBADD) $(LIBS)
libskewsymmetric2D.la: $(libskewsymmetric2D_la_OBJECTS) $(libskewsymmetric2D_la_DEPENDENCIES) $(EXTRA_libskewsymmetric2D_la_DEPENDENCIES) 
	$(libskewsymmetric2D_la_LINK) -rpath $(pkglibdir) $(libskewsymmetric2D_la_OBJECTS) $(libskewsymmetric2D_la_LIBADD) $(LIBS)
libskewsymmetric3D.la: $(libskewsymmetric3D_la_OBJECTS) $(libskewsymmetric3D_la_DEPENDENCIES) $(EXTRA_libskewsymmetric3D_la_DEPENDENCIES) 
	$(libskewsymmetric3D_la_LINK) -rpath $(pkglibdir) $(libskewsymmetric3D_la_OBJECTS) $(libskewsymmetric3D_la_LIBADD) $(LIBS)
libstokes2D.la: $(libstokes2D_la_OBJECTS) $(libstokes2D_la_DEPENDENCIES) $(EXTRA_libstokes2D_la_DEPENDENCIES) 
	$(F77LINK) $(am_libstokes2D_la_rpath) $(libstokes2D_la_OBJECTS) $(libstokes2D_la_LIBADD) $(LIBS)
libstokes3D.la: $(libstokes3D_la_OBJECTS) $(libstokes3D_la_DEPENDENCIES) $(EXTRA_libstokes3D_la_DEPENDENCIES) 
	$(F77LINK) $(am_libstokes3D_la_rpath) $(libstokes3D_la_OBJECTS) $(libstokes3D_la_LIBADD) $(LIBS)
libterrain2D.la: $(libterrain2D_la_OBJECTS) $(libterrain2D_la_DEPENDENCIES) $(EXTRA_libterrain2D_la_DEPENDENCIES) 
	$(libterrain2D_la_LINK) -rpath $(pkglibdir) $(libterrain2D_la_OBJECTS) $(libterrain2D_la_LIBADD) $(LIBS)
libterrain3D.la: $(libterrain3D_la_OBJECTS) $(libterrain3D_la_DEPENDENCIES) $(EXTRA_libterrain3D_la_DEPENDENCIES) 
	$(LINK) -rpath $(pkglibdir) $(libterrain3D_la_OBJECTS) $(libterrain3D_la_LIBADD) $(LIBS)
libtide2D.la: $(libtide2D_la_OBJECTS) $(libtide2D_la_DEPENDENCIES) $(EXTRA_libtide2D_la_DEPENDENCIES) 
	$(libtide2D_la_LINK) $(am_libtide2D_la_rpath) $(libtide2D_la_OBJECTS) $(libtide2D_la_LIBADD) $(LIBS)
libtide3D.la: $(libtide3D_la_OBJECTS) $(libtide3D_la_DEPENDENCIES) $(EXTRA_libtide3D_la_DEPENDENCIES) 
	$(libtide3D_la_LINK) $(am_libtide3D_la_rpath) $(libtide3D_la_OBJECTS) $(libtide3D_la_LIBADD) $(LIBS)
libtopics2D.la: $(libtopics2D_la_OBJECTS) $(libtopics2D_la_DEPENDENCIES) $(EXTRA_libtopics2D_la_DEPENDENCIES) 
	$(libtopics2D_la_LINK) -rpath $(pkglibdir) $(libtopics2D_la_OBJECTS) $(libtopics2D_la_LIBADD) $(LIBS)
libtopics3D.la: $(libtopics3D_la_OBJECTS) $(libtopics3D_la_DEPENDENCIES) $(EXTRA_libtopics3D_la_DEPENDENCIES) 
	$(libtopics3D_la_LINK) -rpath $(pkglibdir) $(libtopics3D_la_OBJECTS) $(libtopics3D_la_LIBADD) $(LIBS)
libwavewatch2D.la: $(libwavewatch2D_la_OBJECTS) $(libwavewatch2D_la_DEPENDENCIES) $(EXTRA_libwavewatch2D_la_DEPENDENCIES) 
	$(libwavewatch2D_la_LINK) $(am_libwavewatch2D_la_rpath) $(libwavewatch2D_la_OBJECTS) $(libwavewatch2D_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
rsurface2kdt$(EXEEXT): $(rsurface2kdt_OBJECTS) $(rsurface2kdt_DEPENDENCIES) $(EXTRA_rsurface2kdt_DEPENDENCIES) 
	@rm -f rsurface2kdt$(EXEEXT)
	$(rsurface2kdt_LINK) $(rsurface2kdt_OBJECTS) $(rsurface2kdt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libagmg2D_la-agmg.Plo
include ./$(DEPDIR)/libagmg3D_la-agmg.Plo
include ./$(DEPDIR)/libbubbles2D_la-bubbles.Plo
include ./$(DEPDIR)/libbubbles3D_la-bubbles.Plo
include ./$(DEPDIR)/libculvert2D_la-culvert.Plo
include ./$(DEPDIR)/libdf33D_la-df3.Plo
include ./$(DEPDIR)/libelectrohydro2D_la-electrohydro.Plo
include ./$(DEPDIR)/libelectrohydro3D_la-electrohydro.Plo
include ./$(DEPDIR)/libfft2D_la-fft.Plo
include ./$(DEPDIR)/libfft3D_la-fft.Plo
include ./$(DEPDIR)/libhypre2D_la-hypre.Plo
include ./$(DEPDIR)/libhypre3D_la-hypre.Plo
include ./$(DEPDIR)/liblayered2D_la-layered.Plo
include ./$(DEPDIR)/liblis2D_la-lis.Plo
include ./$(DEPDIR)/liblis3D_la-lis.Plo
include ./$(DEPDIR)/libmap2D_la-map.Plo
include ./$(DEPDIR)/libode2D_la-ode.Plo
include ./$(DEPDIR)/libode3D_la-ode.Plo
include ./$(DEPDIR)/libokada2D_la-okada.Plo
include ./$(DEPDIR)/libokada3D_la-okada.Plo
include ./$(DEPDIR)/libparticulatecommon2D_la-particulatecommon.Plo
include ./$(DEPDIR)/libparticulatecommon3D_la-particulatecommon.Plo
include ./$(DEPDIR)/libparticulates2D_la-particulates.Plo
include ./$(DEPDIR)/libparticulates3D_la-particulates.Plo
include ./$(DEPDIR)/libskewsymmetric2D_la-skewsymmetric.Plo
include ./$(DEPDIR)/libskewsymmetric3D_la-skewsymmetric.Plo
include ./$(DEPDIR)/libstokes2D_la-stokes.Plo
include ./$(DEPDIR)/libstokes3D_la-stokes.Plo
include ./$(DEPDIR)/libterrain2D_la-terrain.Plo
include ./$(DEPDIR)/libtide2D_la-tide.Plo
include ./$(DEPDIR)/libtide3D_la-tide.Plo
include ./$(DEPDIR)/libtopics2D_la-topics.Plo
include ./$(DEPDIR)/libtopics3D_la-topics.Plo
include ./$(DEPDIR)/libwavewatch2D_la-wavewatch.Plo
include ./$(DEPDIR)/map.Plo
include ./$(DEPDIR)/rsurface2kdt-rsurface.Po
include ./$(DEPDIR)/rsurface2kdt-rsurface2kdt.Po
include ./$(DEPDIR)/terrain.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libagmg2D_la-agmg.lo: agmg.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libagmg2D_la_CFLAGS) $(CFLAGS) -MT libagmg2D_la-agmg.lo -MD -MP -MF $(DEPDIR)/libagmg2D_la-agmg.Tpo -c -o libagmg2D_la-agmg.lo `test -f 'agmg.c' || echo '$(srcdir)/'`agmg.c
	$(am__mv) $(DEPDIR)/libagmg2D_la-agmg.Tpo $(DEPDIR)/libagmg2D_la-agmg.Plo
#	source='agmg.c' object='libagmg2D_la-agmg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libagmg2D_la_CFLAGS) $(CFLAGS) -c -o libagmg2D_la-agmg.lo `test -f 'agmg.c' || echo '$(srcdir)/'`agmg.c

libagmg3D_la-agmg.lo: agmg.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libagmg3D_la_CFLAGS) $(CFLAGS) -MT libagmg3D_la-agmg.lo -MD -MP -MF $(DEPDIR)/libagmg3D_la-agmg.Tpo -c -o libagmg3D_la-agmg.lo `test -f 'agmg.c' || echo '$(srcdir)/'`agmg.c
	$(am__mv) $(DEPDIR)/libagmg3D_la-agmg.Tpo $(DEPDIR)/libagmg3D_la-agmg.Plo
#	source='agmg.c' object='libagmg3D_la-agmg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libagmg3D_la_CFLAGS) $(CFLAGS) -c -o libagmg3D_la-agmg.lo `test -f 'agmg.c' || echo '$(srcdir)/'`agmg.c

libbubbles2D_la-bubbles.lo: bubbles.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbubbles2D_la_CFLAGS) $(CFLAGS) -MT libbubbles2D_la-bubbles.lo -MD -MP -MF $(DEPDIR)/libbubbles2D_la-bubbles.Tpo -c -o libbubbles2D_la-bubbles.lo `test -f 'bubbles.c' || echo '$(srcdir)/'`bubbles.c
	$(am__mv) $(DEPDIR)/libbubbles2D_la-bubbles.Tpo $(DEPDIR)/libbubbles2D_la-bubbles.Plo
#	source='bubbles.c' object='libbubbles2D_la-bubbles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbubbles2D_la_CFLAGS) $(CFLAGS) -c -o libbubbles2D_la-bubbles.lo `test -f 'bubbles.c' || echo '$(srcdir)/'`bubbles.c

libbubbles3D_la-bubbles.lo: bubbles.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbubbles3D_la_CFLAGS) $(CFLAGS) -MT libbubbles3D_la-bubbles.lo -MD -MP -MF $(DEPDIR)/libbubbles3D_la-bubbles.Tpo -c -o libbubbles3D_la-bubbles.lo `test -f 'bubbles.c' || echo '$(srcdir)/'`bubbles.c
	$(am__mv) $(DEPDIR)/libbubbles3D_la-bubbles.Tpo $(DEPDIR)/libbubbles3D_la-bubbles.Plo
#	source='bubbles.c' object='libbubbles3D_la-bubbles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbubbles3D_la_CFLAGS) $(CFLAGS) -c -o libbubbles3D_la-bubbles.lo `test -f 'bubbles.c' || echo '$(srcdir)/'`bubbles.c

libculvert2D_la-culvert.lo: culvert.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libculvert2D_la_CFLAGS) $(CFLAGS) -MT libculvert2D_la-culvert.lo -MD -MP -MF $(DEPDIR)/libculvert2D_la-culvert.Tpo -c -o libculvert2D_la-culvert.lo `test -f 'culvert.c' || echo '$(srcdir)/'`culvert.c
	$(am__mv) $(DEPDIR)/libculvert2D_la-culvert.Tpo $(DEPDIR)/libculvert2D_la-culvert.Plo
#	source='culvert.c' object='libculvert2D_la-culvert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libculvert2D_la_CFLAGS) $(CFLAGS) -c -o libculvert2D_la-culvert.lo `test -f 'culvert.c' || echo '$(srcdir)/'`culvert.c

libdf33D_la-df3.lo: df3.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdf33D_la_CFLAGS) $(CFLAGS) -MT libdf33D_la-df3.lo -MD -MP -MF $(DEPDIR)/libdf33D_la-df3.Tpo -c -o libdf33D_la-df3.lo `test -f 'df3.c' || echo '$(srcdir)/'`df3.c
	$(am__mv) $(DEPDIR)/libdf33D_la-df3.Tpo $(DEPDIR)/libdf33D_la-df3.Plo
#	source='df3.c' object='libdf33D_la-df3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdf33D_la_CFLAGS) $(CFLAGS) -c -o libdf33D_la-df3.lo `test -f 'df3.c' || echo '$(srcdir)/'`df3.c

libelectrohydro2D_la-electrohydro.lo: electrohydro.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelectrohydro2D_la_CFLAGS) $(CFLAGS) -MT libelectrohydro2D_la-electrohydro.lo -MD -MP -MF $(DEPDIR)/libelectrohydro2D_la-electrohydro.Tpo -c -o libelectrohydro2D_la-electrohydro.lo `test -f 'electrohydro.c' || echo '$(srcdir)/'`electrohydro.c
	$(am__mv) $(DEPDIR)/libelectrohydro2D_la-electrohydro.Tpo $(DEPDIR)/libelectrohydro2D_la-electrohydro.Plo
#	source='electrohydro.c' object='libelectrohydro2D_la-electrohydro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelectrohydro2D_la_CFLAGS) $(CFLAGS) -c -o libelectrohydro2D_la-electrohydro.lo `test -f 'electrohydro.c' || echo '$(srcdir)/'`electrohydro.c

libelectrohydro3D_la-electrohydro.lo: electrohydro.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelectrohydro3D_la_CFLAGS) $(CFLAGS) -MT libelectrohydro3D_la-electrohydro.lo -MD -MP -MF $(DEPDIR)/libelectrohydro3D_la-electrohydro.Tpo -c -o libelectrohydro3D_la-electrohydro.lo `test -f 'electrohydro.c' || echo '$(srcdir)/'`electrohydro.c
	$(am__mv) $(DEPDIR)/libelectrohydro3D_la-electrohydro.Tpo $(DEPDIR)/libelectrohydro3D_la-electrohydro.Plo
#	source='electrohydro.c' object='libelectrohydro3D_la-electrohydro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelectrohydro3D_la_CFLAGS) $(CFLAGS) -c -o libelectrohydro3D_la-electrohydro.lo `test -f 'electrohydro.c' || echo '$(srcdir)/'`electrohydro.c

libfft2D_la-fft.lo: fft.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfft2D_la_CFLAGS) $(CFLAGS) -MT libfft2D_la-fft.lo -MD -MP -MF $(DEPDIR)/libfft2D_la-fft.Tpo -c -o libfft2D_la-fft.lo `test -f 'fft.c' || echo '$(srcdir)/'`fft.c
	$(am__mv) $(DEPDIR)/libfft2D_la-fft.Tpo $(DEPDIR)/libfft2D_la-fft.Plo
#	source='fft.c' object='libfft2D_la-fft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfft2D_la_CFLAGS) $(CFLAGS) -c -o libfft2D_la-fft.lo `test -f 'fft.c' || echo '$(srcdir)/'`fft.c

libfft3D_la-fft.lo: fft.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfft3D_la_CFLAGS) $(CFLAGS) -MT libfft3D_la-fft.lo -MD -MP -MF $(DEPDIR)/libfft3D_la-fft.Tpo -c -o libfft3D_la-fft.lo `test -f 'fft.c' || echo '$(srcdir)/'`fft.c
	$(am__mv) $(DEPDIR)/libfft3D_la-fft.Tpo $(DEPDIR)/libfft3D_la-fft.Plo
#	source='fft.c' object='libfft3D_la-fft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfft3D_la_CFLAGS) $(CFLAGS) -c -o libfft3D_la-fft.lo `test -f 'fft.c' || echo '$(srcdir)/'`fft.c

libhypre2D_la-hypre.lo: hypre.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhypre2D_la_CFLAGS) $(CFLAGS) -MT libhypre2D_la-hypre.lo -MD -MP -MF $(DEPDIR)/libhypre2D_la-hypre.Tpo -c -o libhypre2D_la-hypre.lo `test -f 'hypre.c' || echo '$(srcdir)/'`hypre.c
	$(am__mv) $(DEPDIR)/libhypre2D_la-hypre.Tpo $(DEPDIR)/libhypre2D_la-hypre.Plo
#	source='hypre.c' object='libhypre2D_la-hypre.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhypre2D_la_CFLAGS) $(CFLAGS) -c -o libhypre2D_la-hypre.lo `test -f 'hypre.c' || echo '$(srcdir)/'`hypre.c

libhypre3D_la-hypre.lo: hypre.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhypre3D_la_CFLAGS) $(CFLAGS) -MT libhypre3D_la-hypre.lo -MD -MP -MF $(DEPDIR)/libhypre3D_la-hypre.Tpo -c -o libhypre3D_la-hypre.lo `test -f 'hypre.c' || echo '$(srcdir)/'`hypre.c
	$(am__mv) $(DEPDIR)/libhypre3D_la-hypre.Tpo $(DEPDIR)/libhypre3D_la-hypre.Plo
#	source='hypre.c' object='libhypre3D_la-hypre.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhypre3D_la_CFLAGS) $(CFLAGS) -c -o libhypre3D_la-hypre.lo `test -f 'hypre.c' || echo '$(srcdir)/'`hypre.c

liblayered2D_la-layered.lo: layered.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblayered2D_la_CFLAGS) $(CFLAGS) -MT liblayered2D_la-layered.lo -MD -MP -MF $(DEPDIR)/liblayered2D_la-layered.Tpo -c -o liblayered2D_la-layered.lo `test -f 'layered.c' || echo '$(srcdir)/'`layered.c
	$(am__mv) $(DEPDIR)/liblayered2D_la-layered.Tpo $(DEPDIR)/liblayered2D_la-layered.Plo
#	source='layered.c' object='liblayered2D_la-layered.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblayered2D_la_CFLAGS) $(CFLAGS) -c -o liblayered2D_la-layered.lo `test -f 'layered.c' || echo '$(srcdir)/'`layered.c

liblis2D_la-lis.lo: lis.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblis2D_la_CFLAGS) $(CFLAGS) -MT liblis2D_la-lis.lo -MD -MP -MF $(DEPDIR)/liblis2D_la-lis.Tpo -c -o liblis2D_la-lis.lo `test -f 'lis.c' || echo '$(srcdir)/'`lis.c
	$(am__mv) $(DEPDIR)/liblis2D_la-lis.Tpo $(DEPDIR)/liblis2D_la-lis.Plo
#	source='lis.c' object='liblis2D_la-lis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblis2D_la_CFLAGS) $(CFLAGS) -c -o liblis2D_la-lis.lo `test -f 'lis.c' || echo '$(srcdir)/'`lis.c

liblis3D_la-lis.lo: lis.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblis3D_la_CFLAGS) $(CFLAGS) -MT liblis3D_la-lis.lo -MD -MP -MF $(DEPDIR)/liblis3D_la-lis.Tpo -c -o liblis3D_la-lis.lo `test -f 'lis.c' || echo '$(srcdir)/'`lis.c
	$(am__mv) $(DEPDIR)/liblis3D_la-lis.Tpo $(DEPDIR)/liblis3D_la-lis.Plo
#	source='lis.c' object='liblis3D_la-lis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblis3D_la_CFLAGS) $(CFLAGS) -c -o liblis3D_la-lis.lo `test -f 'lis.c' || echo '$(srcdir)/'`lis.c

libmap2D_la-map.lo: map.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmap2D_la_CFLAGS) $(CFLAGS) -MT libmap2D_la-map.lo -MD -MP -MF $(DEPDIR)/libmap2D_la-map.Tpo -c -o libmap2D_la-map.lo `test -f 'map.c' || echo '$(srcdir)/'`map.c
	$(am__mv) $(DEPDIR)/libmap2D_la-map.Tpo $(DEPDIR)/libmap2D_la-map.Plo
#	source='map.c' object='libmap2D_la-map.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmap2D_la_CFLAGS) $(CFLAGS) -c -o libmap2D_la-map.lo `test -f 'map.c' || echo '$(srcdir)/'`map.c

libode2D_la-ode.lo: ode.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libode2D_la_CFLAGS) $(CFLAGS) -MT libode2D_la-ode.lo -MD -MP -MF $(DEPDIR)/libode2D_la-ode.Tpo -c -o libode2D_la-ode.lo `test -f 'ode.c' || echo '$(srcdir)/'`ode.c
	$(am__mv) $(DEPDIR)/libode2D_la-ode.Tpo $(DEPDIR)/libode2D_la-ode.Plo
#	source='ode.c' object='libode2D_la-ode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libode2D_la_CFLAGS) $(CFLAGS) -c -o libode2D_la-ode.lo `test -f 'ode.c' || echo '$(srcdir)/'`ode.c

libode3D_la-ode.lo: ode.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libode3D_la_CFLAGS) $(CFLAGS) -MT libode3D_la-ode.lo -MD -MP -MF $(DEPDIR)/libode3D_la-ode.Tpo -c -o libode3D_la-ode.lo `test -f 'ode.c' || echo '$(srcdir)/'`ode.c
	$(am__mv) $(DEPDIR)/libode3D_la-ode.Tpo $(DEPDIR)/libode3D_la-ode.Plo
#	source='ode.c' object='libode3D_la-ode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libode3D_la_CFLAGS) $(CFLAGS) -c -o libode3D_la-ode.lo `test -f 'ode.c' || echo '$(srcdir)/'`ode.c

libokada2D_la-okada.lo: okada.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libokada2D_la_CFLAGS) $(CFLAGS) -MT libokada2D_la-okada.lo -MD -MP -MF $(DEPDIR)/libokada2D_la-okada.Tpo -c -o libokada2D_la-okada.lo `test -f 'okada.c' || echo '$(srcdir)/'`okada.c
	$(am__mv) $(DEPDIR)/libokada2D_la-okada.Tpo $(DEPDIR)/libokada2D_la-okada.Plo
#	source='okada.c' object='libokada2D_la-okada.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libokada2D_la_CFLAGS) $(CFLAGS) -c -o libokada2D_la-okada.lo `test -f 'okada.c' || echo '$(srcdir)/'`okada.c

libokada3D_la-okada.lo: okada.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libokada3D_la_CFLAGS) $(CFLAGS) -MT libokada3D_la-okada.lo -MD -MP -MF $(DEPDIR)/libokada3D_la-okada.Tpo -c -o libokada3D_la-okada.lo `test -f 'okada.c' || echo '$(srcdir)/'`okada.c
	$(am__mv) $(DEPDIR)/libokada3D_la-okada.Tpo $(DEPDIR)/libokada3D_la-okada.Plo
#	source='okada.c' object='libokada3D_la-okada.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libokada3D_la_CFLAGS) $(CFLAGS) -c -o libokada3D_la-okada.lo `test -f 'okada.c' || echo '$(srcdir)/'`okada.c

libparticulatecommon2D_la-particulatecommon.lo: particulatecommon.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulatecommon2D_la_CFLAGS) $(CFLAGS) -MT libparticulatecommon2D_la-particulatecommon.lo -MD -MP -MF $(DEPDIR)/libparticulatecommon2D_la-particulatecommon.Tpo -c -o libparticulatecommon2D_la-particulatecommon.lo `test -f 'particulatecommon.c' || echo '$(srcdir)/'`particulatecommon.c
	$(am__mv) $(DEPDIR)/libparticulatecommon2D_la-particulatecommon.Tpo $(DEPDIR)/libparticulatecommon2D_la-particulatecommon.Plo
#	source='particulatecommon.c' object='libparticulatecommon2D_la-particulatecommon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulatecommon2D_la_CFLAGS) $(CFLAGS) -c -o libparticulatecommon2D_la-particulatecommon.lo `test -f 'particulatecommon.c' || echo '$(srcdir)/'`particulatecommon.c

libparticulatecommon3D_la-particulatecommon.lo: particulatecommon.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulatecommon3D_la_CFLAGS) $(CFLAGS) -MT libparticulatecommon3D_la-particulatecommon.lo -MD -MP -MF $(DEPDIR)/libparticulatecommon3D_la-particulatecommon.Tpo -c -o libparticulatecommon3D_la-particulatecommon.lo `test -f 'particulatecommon.c' || echo '$(srcdir)/'`particulatecommon.c
	$(am__mv) $(DEPDIR)/libparticulatecommon3D_la-particulatecommon.Tpo $(DEPDIR)/libparticulatecommon3D_la-particulatecommon.Plo
#	source='particulatecommon.c' object='libparticulatecommon3D_la-particulatecommon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulatecommon3D_la_CFLAGS) $(CFLAGS) -c -o libparticulatecommon3D_la-particulatecommon.lo `test -f 'particulatecommon.c' || echo '$(srcdir)/'`particulatecommon.c

libparticulates2D_la-particulates.lo: particulates.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulates2D_la_CFLAGS) $(CFLAGS) -MT libparticulates2D_la-particulates.lo -MD -MP -MF $(DEPDIR)/libparticulates2D_la-particulates.Tpo -c -o libparticulates2D_la-particulates.lo `test -f 'particulates.c' || echo '$(srcdir)/'`particulates.c
	$(am__mv) $(DEPDIR)/libparticulates2D_la-particulates.Tpo $(DEPDIR)/libparticulates2D_la-particulates.Plo
#	source='particulates.c' object='libparticulates2D_la-particulates.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulates2D_la_CFLAGS) $(CFLAGS) -c -o libparticulates2D_la-particulates.lo `test -f 'particulates.c' || echo '$(srcdir)/'`particulates.c

libparticulates3D_la-particulates.lo: particulates.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulates3D_la_CFLAGS) $(CFLAGS) -MT libparticulates3D_la-particulates.lo -MD -MP -MF $(DEPDIR)/libparticulates3D_la-particulates.Tpo -c -o libparticulates3D_la-particulates.lo `test -f 'particulates.c' || echo '$(srcdir)/'`particulates.c
	$(am__mv) $(DEPDIR)/libparticulates3D_la-particulates.Tpo $(DEPDIR)/libparticulates3D_la-particulates.Plo
#	source='particulates.c' object='libparticulates3D_la-particulates.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libparticulates3D_la_CFLAGS) $(CFLAGS) -c -o libparticulates3D_la-particulates.lo `test -f 'particulates.c' || echo '$(srcdir)/'`particulates.c

libskewsymmetric2D_la-skewsymmetric.lo: skewsymmetric.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskewsymmetric2D_la_CFLAGS) $(CFLAGS) -MT libskewsymmetric2D_la-skewsymmetric.lo -MD -MP -MF $(DEPDIR)/libskewsymmetric2D_la-skewsymmetric.Tpo -c -o libskewsymmetric2D_la-skewsymmetric.lo `test -f 'skewsymmetric.c' || echo '$(srcdir)/'`skewsymmetric.c
	$(am__mv) $(DEPDIR)/libskewsymmetric2D_la-skewsymmetric.Tpo $(DEPDIR)/libskewsymmetric2D_la-skewsymmetric.Plo
#	source='skewsymmetric.c' object='libskewsymmetric2D_la-skewsymmetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskewsymmetric2D_la_CFLAGS) $(CFLAGS) -c -o libskewsymmetric2D_la-skewsymmetric.lo `test -f 'skewsymmetric.c' || echo '$(srcdir)/'`skewsymmetric.c

libskewsymmetric3D_la-skewsymmetric.lo: skewsymmetric.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskewsymmetric3D_la_CFLAGS) $(CFLAGS) -MT libskewsymmetric3D_la-skewsymmetric.lo -MD -MP -MF $(DEPDIR)/libskewsymmetric3D_la-skewsymmetric.Tpo -c -o libskewsymmetric3D_la-skewsymmetric.lo `test -f 'skewsymmetric.c' || echo '$(srcdir)/'`skewsymmetric.c
	$(am__mv) $(DEPDIR)/libskewsymmetric3D_la-skewsymmetric.Tpo $(DEPDIR)/libskewsymmetric3D_la-skewsymmetric.Plo
#	source='skewsymmetric.c' object='libskewsymmetric3D_la-skewsymmetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskewsymmetric3D_la_CFLAGS) $(CFLAGS) -c -o libskewsymmetric3D_la-skewsymmetric.lo `test -f 'skewsymmetric.c' || echo '$(srcdir)/'`skewsymmetric.c

libstokes2D_la-stokes.lo: stokes.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstokes2D_la_CFLAGS) $(CFLAGS) -MT libstokes2D_la-stokes.lo -MD -MP -MF $(DEPDIR)/libstokes2D_la-stokes.Tpo -c -o libstokes2D_la-stokes.lo `test -f 'stokes.c' || echo '$(srcdir)/'`stokes.c
	$(am__mv) $(DEPDIR)/libstokes2D_la-stokes.Tpo $(DEPDIR)/libstokes2D_la-stokes.Plo
#	source='stokes.c' object='libstokes2D_la-stokes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstokes2D_la_CFLAGS) $(CFLAGS) -c -o libstokes2D_la-stokes.lo `test -f 'stokes.c' || echo '$(srcdir)/'`stokes.c

libstokes3D_la-stokes.lo: stokes.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstokes3D_la_CFLAGS) $(CFLAGS) -MT libstokes3D_la-stokes.lo -MD -MP -MF $(DEPDIR)/libstokes3D_la-stokes.Tpo -c -o libstokes3D_la-stokes.lo `test -f 'stokes.c' || echo '$(srcdir)/'`stokes.c
	$(am__mv) $(DEPDIR)/libstokes3D_la-stokes.Tpo $(DEPDIR)/libstokes3D_la-stokes.Plo
#	source='stokes.c' object='libstokes3D_la-stokes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstokes3D_la_CFLAGS) $(CFLAGS) -c -o libstokes3D_la-stokes.lo `test -f 'stokes.c' || echo '$(srcdir)/'`stokes.c

libterrain2D_la-terrain.lo: terrain.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libterrain2D_la_CFLAGS) $(CFLAGS) -MT libterrain2D_la-terrain.lo -MD -MP -MF $(DEPDIR)/libterrain2D_la-terrain.Tpo -c -o libterrain2D_la-terrain.lo `test -f 'terrain.c' || echo '$(srcdir)/'`terrain.c
	$(am__mv) $(DEPDIR)/libterrain2D_la-terrain.Tpo $(DEPDIR)/libterrain2D_la-terrain.Plo
#	source='terrain.c' object='libterrain2D_la-terrain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libterrain2D_la_CFLAGS) $(CFLAGS) -c -o libterrain2D_la-terrain.lo `test -f 'terrain.c' || echo '$(srcdir)/'`terrain.c

libtide2D_la-tide.lo: tide.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtide2D_la_CFLAGS) $(CFLAGS) -MT libtide2D_la-tide.lo -MD -MP -MF $(DEPDIR)/libtide2D_la-tide.Tpo -c -o libtide2D_la-tide.lo `test -f 'tide.c' || echo '$(srcdir)/'`tide.c
	$(am__mv) $(DEPDIR)/libtide2D_la-tide.Tpo $(DEPDIR)/libtide2D_la-tide.Plo
#	source='tide.c' object='libtide2D_la-tide.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtide2D_la_CFLAGS) $(CFLAGS) -c -o libtide2D_la-tide.lo `test -f 'tide.c' || echo '$(srcdir)/'`tide.c

libtide3D_la-tide.lo: tide.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtide3D_la_CFLAGS) $(CFLAGS) -MT libtide3D_la-tide.lo -MD -MP -MF $(DEPDIR)/libtide3D_la-tide.Tpo -c -o libtide3D_la-tide.lo `test -f 'tide.c' || echo '$(srcdir)/'`tide.c
	$(am__mv) $(DEPDIR)/libtide3D_la-tide.Tpo $(DEPDIR)/libtide3D_la-tide.Plo
#	source='tide.c' object='libtide3D_la-tide.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtide3D_la_CFLAGS) $(CFLAGS) -c -o libtide3D_la-tide.lo `test -f 'tide.c' || echo '$(srcdir)/'`tide.c

libtopics2D_la-topics.lo: topics.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtopics2D_la_CFLAGS) $(CFLAGS) -MT libtopics2D_la-topics.lo -MD -MP -MF $(DEPDIR)/libtopics2D_la-topics.Tpo -c -o libtopics2D_la-topics.lo `test -f 'topics.c' || echo '$(srcdir)/'`topics.c
	$(am__mv) $(DEPDIR)/libtopics2D_la-topics.Tpo $(DEPDIR)/libtopics2D_la-topics.Plo
#	source='topics.c' object='libtopics2D_la-topics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtopics2D_la_CFLAGS) $(CFLAGS) -c -o libtopics2D_la-topics.lo `test -f 'topics.c' || echo '$(srcdir)/'`topics.c

libtopics3D_la-topics.lo: topics.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtopics3D_la_CFLAGS) $(CFLAGS) -MT libtopics3D_la-topics.lo -MD -MP -MF $(DEPDIR)/libtopics3D_la-topics.Tpo -c -o libtopics3D_la-topics.lo `test -f 'topics.c' || echo '$(srcdir)/'`topics.c
	$(am__mv) $(DEPDIR)/libtopics3D_la-topics.Tpo $(DEPDIR)/libtopics3D_la-topics.Plo
#	source='topics.c' object='libtopics3D_la-topics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtopics3D_la_CFLAGS) $(CFLAGS) -c -o libtopics3D_la-topics.lo `test -f 'topics.c' || echo '$(srcdir)/'`topics.c

libwavewatch2D_la-wavewatch.lo: wavewatch.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwavewatch2D_la_CFLAGS) $(CFLAGS) -MT libwavewatch2D_la-wavewatch.lo -MD -MP -MF $(DEPDIR)/libwavewatch2D_la-wavewatch.Tpo -c -o libwavewatch2D_la-wavewatch.lo `test -f 'wavewatch.c' || echo '$(srcdir)/'`wavewatch.c
	$(am__mv) $(DEPDIR)/libwavewatch2D_la-wavewatch.Tpo $(DEPDIR)/libwavewatch2D_la-wavewatch.Plo
#	source='wavewatch.c' object='libwavewatch2D_la-wavewatch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwavewatch2D_la_CFLAGS) $(CFLAGS) -c -o libwavewatch2D_la-wavewatch.lo `test -f 'wavewatch.c' || echo '$(srcdir)/'`wavewatch.c

rsurface2kdt-rsurface2kdt.o: rsurface2kdt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -MT rsurface2kdt-rsurface2kdt.o -MD -MP -MF $(DEPDIR)/rsurface2kdt-rsurface2kdt.Tpo -c -o rsurface2kdt-rsurface2kdt.o `test -f 'rsurface2kdt.c' || echo '$(srcdir)/'`rsurface2kdt.c
	$(am__mv) $(DEPDIR)/rsurface2kdt-rsurface2kdt.Tpo $(DEPDIR)/rsurface2kdt-rsurface2kdt.Po
#	source='rsurface2kdt.c' object='rsurface2kdt-rsurface2kdt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -c -o rsurface2kdt-rsurface2kdt.o `test -f 'rsurface2kdt.c' || echo '$(srcdir)/'`rsurface2kdt.c

rsurface2kdt-rsurface2kdt.obj: rsurface2kdt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -MT rsurface2kdt-rsurface2kdt.obj -MD -MP -MF $(DEPDIR)/rsurface2kdt-rsurface2kdt.Tpo -c -o rsurface2kdt-rsurface2kdt.obj `if test -f 'rsurface2kdt.c'; then $(CYGPATH_W) 'rsurface2kdt.c'; else $(CYGPATH_W) '$(srcdir)/rsurface2kdt.c'; fi`
	$(am__mv) $(DEPDIR)/rsurface2kdt-rsurface2kdt.Tpo $(DEPDIR)/rsurface2kdt-rsurface2kdt.Po
#	source='rsurface2kdt.c' object='rsurface2kdt-rsurface2kdt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -c -o rsurface2kdt-rsurface2kdt.obj `if test -f 'rsurface2kdt.c'; then $(CYGPATH_W) 'rsurface2kdt.c'; else $(CYGPATH_W) '$(srcdir)/rsurface2kdt.c'; fi`

rsurface2kdt-rsurface.o: rsurface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -MT rsurface2kdt-rsurface.o -MD -MP -MF $(DEPDIR)/rsurface2kdt-rsurface.Tpo -c -o rsurface2kdt-rsurface.o `test -f 'rsurface.c' || echo '$(srcdir)/'`rsurface.c
	$(am__mv) $(DEPDIR)/rsurface2kdt-rsurface.Tpo $(DEPDIR)/rsurface2kdt-rsurface.Po
#	source='rsurface.c' object='rsurface2kdt-rsurface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -c -o rsurface2kdt-rsurface.o `test -f 'rsurface.c' || echo '$(srcdir)/'`rsurface.c

rsurface2kdt-rsurface.obj: rsurface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -MT rsurface2kdt-rsurface.obj -MD -MP -MF $(DEPDIR)/rsurface2kdt-rsurface.Tpo -c -o rsurface2kdt-rsurface.obj `if test -f 'rsurface.c'; then $(CYGPATH_W) 'rsurface.c'; else $(CYGPATH_W) '$(srcdir)/rsurface.c'; fi`
	$(am__mv) $(DEPDIR)/rsurface2kdt-rsurface.Tpo $(DEPDIR)/rsurface2kdt-rsurface.Po
#	source='rsurface.c' object='rsurface2kdt-rsurface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rsurface2kdt_CFLAGS) $(CFLAGS) -c -o rsurface2kdt-rsurface.obj `if test -f 'rsurface.c'; then $(CYGPATH_W) 'rsurface.c'; else $(CYGPATH_W) '$(srcdir)/rsurface.c'; fi`

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(LTF77COMPILE) -c -o $@ $<

.f90.o:
	$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(LTFCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-pkglibLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pkglibLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pkglibLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-pkglibLTLIBRARIES install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-pkglibLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
